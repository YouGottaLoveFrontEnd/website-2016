////
// Sets a value for a property only if value exists.
// @param $property - the css property to be set
// @param $value - a values for the property to be set to
// @param $empty-value - (optional, default nil) definition for "empty value"
//
@mixin set-if-exists($property, $value, $empty-value: nil) {
  @if ($value != $empty-value) {
    #{$property}: $value;
  }
}

////
// Sets default values for pseudo elements (:before and :after).
// @param $width - (optional, default: nil) width to be set
// @param $height - (optional, default: width value) height to be set
// @param $content - (optional, default: "") the content to be put inside the pseudo element
//
@mixin pseudo-element($width: nil, $height: $width, $content: "") {
  @include dimensions($width, $height);
  @include set-if-exists(content, $content);
  display: inline-block;
}

@mixin brand-gradient($direction: bottom) {
  @include background-image(linear-gradient(to $direction, $color-blue, $color-green, $color-green));
}

@mixin animated-link($color: $color-white, $bottom: 0) {
  position: relative;
  display: inline-block;
  text-decoration: none;

  &:before {
    content: "";
    position: absolute;
    width: 0;
    height: 1px;
    bottom: $bottom;
    background-color: $color;
    @include transition(all 0.3s ease-in-out);
  }

  &:hover:before {
    width: 100%
  }
}

@mixin js-mobile() {
  .mobile & {
    @content;
  }
}

@mixin page-link-after($text) {
  &:after {
    content: $text;
  }
}

@mixin transform-prefix($transform) {
  transform: $transform;
  -ms-transform: $transform;
  -webkit-transform: $transform;
  -o-transform: $transform;
  -moz-transform: $transform;
}
